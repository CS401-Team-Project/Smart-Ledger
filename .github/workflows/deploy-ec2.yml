name: Deploy-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    steps:
      - name: Docker Deployment
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ubuntu@ec2-3-94-79-251.compute-1.amazonaws.com
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.SSH_KNOWN_HOSTS }}
          deployment_mode: docker-compose
          docker_prune: 'true'
          args: up -d
          
#       # Step 2: Add SSH credentials to your GitHub CI/CD instance
#       - name: Add SSH Credentials
#         uses: shimataro/ssh-key-action@v2.3.1
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }} # required, this will be used when transferring files to your deploy targets
#           known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }} # required, should match up with your deploy targets (see below)

#       # Step 3: Deploy!
#       - name: Deploy to Staging
#         uses: JorgenVatle/docker-compose-deploy@v1.0
#         with:
#           deploy_targets: 'ec2-18-188-73-116.us-east-2.compute.amazonaws.com' # required, comma separated list of servers to deploy to.

#           ssh_user: 'deploy' # optional, user to connect to deploy targets with. Defaults to 'root'
#           compose_file: 'docker-compose.yml' # optional, path/filename of your docker-compose file. Defaults to 'docker-compose.yml'
#           validate_container: 'app' # optional, validate that the given container name is running. Otherwise, throw an error. Defaults to 'app'
